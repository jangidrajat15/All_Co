
--- AWT ---
--> AWT stands for Abstract Window Toolkit.
-> It is a platform-dependent API to develop GUI (Graphical User Interface) or window-based applications in Java.


--- Layout Managers ---

1. Border Layout 
--> In this we have five places for putting any components in frame 
-> 1. North, 2. South, 3. East, 4. West, 5. Center
-> it is used as - if we have one frame F then for putting button B1 in center 
    we can write f.add(B1,"Center"); but before this we have to set Layout.

2. Card Layout
--> It Stores components as a stack of Cards i.e. only one components is visible at a time.
-> In this we can define as card =new cardLayout(40,30); here (40,30) is size of the card.
    and then for adding button we write f.add("Card1",B1); f.add("Card2",B2); and so on.

3. Flow Layout
--> It is default Layout which we can define as setLayout(new FlowLayout()); or setLayout(null);
-> In this components are put one after another in a sequence.

4. Grid Layout
--> In this we divide the container into a grid of cells and then each cell accomodates one component.
-> we can define this as f.setLayout(new GridLayout(3,2)); and then add button normally as f.add(B1);

--- AWT UI Elements ---

1. label
-> This does not create any event.
-> Text in this can not be change by the end user.
-> we can define this as label l=new label("Hello_Rajat");
-> we can set this as l.setText("Hello_Chetan");
-> we can also get the string in this by using l.getText();

2. TextField
-> In this we allow the user to edit single line of text.
-> In thid event is generated by user typing in TextField.
-> In this we can definr this as TextField F1=new TextField(10); here 10 is the size of the string.
-> In this also we can use set and get methods as in label.

3. Button
-> It generates an event when pressed/released.
-> It is define as Button B1=new Button("Type here");

4. CheckBox
-> Used to turn an option TRUE or FALSE.
-> Java Doesn't have any Radio Class in AWT.
    -> In this if we have to define checkbox then we can define that as CheckBox C1=new CheckBox("Label_Name" , null //C.B.G , true //default value);
       and for false we can write checkbox C2=new CheckBox("Label_Name", null,false);
    -> Now if we have to make Radio Button in java with AWT then we are going to use checkbox Group.
    as cgb=new CheckBoxGroup(); and then checkbox C3=new CheckBox("Label_Name", cgb ,true || false);
    so in this we can only select one of the given all Radio Buttons.

5. List
-> Represents a list of text items.
-> We can choose either one or multiple items are allowed.
-> we can define as List L1=new List(2,true); (i.e. we can add two values in it .) as L1.add("Hello"); and L1.add("Byy");


6. Choice 
-> Used to make pop up menu of choices.
-> Selected choice is seen on the top of the menu.
-> It is define as Choice Ch1=new Choice(); and then add as Ch1.add("Hii1"); Ch1.add("Hii2"); Ch1.add("Hiii3"); and so on.

7. TextArea
-> Provides multiple editor area.
-> Also when the text become larger then the viewable area the scroll bar is automatically appears.
-> define as TextArea TA=new TextArea(5 //no. of rows, 50 //no. of columns);

8. MenuBar
-> First we have to add MenuBar 
-> Then we have to make Menu(eg. file) and then add Menu_items to that.
-> so we can do this as follows
-> MenuBar MB=new MenuBar();
-> Now set that MenuBar with the current frame F as F.setMenuBar(MB);
-> Now for making Menu we use Menu file=new Menu("File");
-> Now for MenuItems we use MenuItems i1,i2;
-> file.add(new MenuItems("First"));
->Now add this Menu to MenuBar as MB.add(file); 

9. ScrollBar
-> First we make object of ScrollBar Class and then set Orientation as Horizontal and vertical.
-> ScrollBar SB=new ScrollBar();

-> Horizontal - SB.SetOrientation(Scrollbar.HORIZONTAL);
-> Vertical  - SB.SetOrientation(ScrollBar.Vertical");




----- Swing -----

-> import javax.swing.*;
